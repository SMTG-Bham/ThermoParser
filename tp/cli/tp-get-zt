#!/usr/bin/env python3

import argparse

parser = argparse.ArgumentParser(
         description='Save ZT to hdf5 and highlights to yaml, and '
                     'prints max to stdout.')
parser.add_argument('file',
                    help='Electronic transport data, e.g. amset '
                         'transport_xxx.json or boltztrap.hdf5.')
parser.add_argument('-k', '--kappa', metavar='file',
                    help='phono3py kappa-mxxx.hdf5.')
parser.add_argument('-d', '--direction', metavar='direction', default='avg',
                    help='direction for anisotropic data. Accepts a-c/ '
                         'x-z or average/ avg. Default: average.')
parser.add_argument('-i', '--interpolate', metavar='interpolate', type=int,
                    help='number of points to interpolate to on each '
                         'axis. Default: None.')
parser.add_argument('--kind', metavar='kind', default='linear',
                    help='interpolation kind. Default: linear.')
parser.add_argument('-o', '--output', metavar='file', default='tp-zt',
                    help='output filename, sans extension. '
                         'Default: tp-zt.')
parser.add_argument('-t', '--type', metavar='doping', default='n',
                    help='type of doping. Must be n or p. Default: n.')

args=parser.parse_args()

import tp

tp.data.save.zt(args.file, args.kappa, direction=args.direction,
                doping=args.type, tinterp=args.interpolate,
                dinterp=args.interpolate, kind=args.kind, output=args.output)
